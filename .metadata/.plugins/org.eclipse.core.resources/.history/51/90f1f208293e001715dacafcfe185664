package expresswaysimulation.agents;

import repast.simphony.engine.schedule.ScheduledMethod;
import repast.simphony.space.SpatialMath;
import repast.simphony.space.continuous.ContinuousSpace;
import repast.simphony.space.continuous.NdPoint;
import repast.simphony.space.grid.Grid;
import repast.simphony.space.grid.GridPoint;

/**
 * Class representing car agent.
 * It can move in straight line or change lane to left or right.
 * When it encounters the gate, it stops for payment and then moves on.
 */
public class Auto {
	
	private ContinuousSpace<Object> mSpace;
	private Grid<Object> mGrid;
	
	public Auto(ContinuousSpace<Object> space, Grid<Object> grid) {
		mSpace = space;
		mGrid = grid;
	}
	
	@ScheduledMethod(start = 1, interval = 1)
	public void step() {
		GridPoint gp = mGrid.getLocation(this);

		moveTo(new GridPoint(gp.getX(), gp.getY() + 10));		
	}
	
	public void moveTo(GridPoint pt) {
		
		if (!pt.equals(mGrid.getLocation(this))) {
			NdPoint myPoint = mSpace.getLocation(this);
			NdPoint otherPoint = new NdPoint(pt.getX(), pt.getY());
			
			double angle = SpatialMath.calcAngleFor2DMovement (mSpace, myPoint, otherPoint);
			mSpace.moveByVector(this, 1, angle, 0);
			
			myPoint = mSpace.getLocation(this);
			
			mGrid.moveTo(this, (int) myPoint.getX(), (int) myPoint.getY());
		}		
	}

}
